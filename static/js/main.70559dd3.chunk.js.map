{"version":3,"sources":["components/Form.tsx","components/Weather.tsx","App.tsx","registerServiceWorker.js","index.js"],"names":["Form","params","className","onSubmit","getWeather","type","name","placeholder","maxLength","onFocus","console","log","setError","text","status","error","Weather","weatherData","dt","main","sys","weather","wind","useState","currentTime","setCurrentTime","temp","feelsLike","humidity","currentTemps","setCurrentTemps","sunrise","sunset","currentSunData","setCurrentSunData","description","icon","currentWeather","setCurrentWeather","deg","speed","currentWind","setCurrentWind","showMore","setShowMore","useEffect","passedTime","time","Date","toLocaleString","getCurrentTime","passedTemps","Math","round","toString","feels_like","getTemps","passedSunData","toLocaleTimeString","getSunData","passedWeather","length","mainWeather","toLowerCase","body","document","classList","add","passedWind","getWind","alt","src","data-active","style","transform","href","onClick","e","reset","initWeatherData","pressure","temp_max","temp_min","country","App","setWeatherData","a","preventDefault","zip","target","elements","value","fetch","api_call","json","data","width","height","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","ReactDOM","render","getElementById","URL","process","origin","addEventListener","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.70559dd3.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form = (params: any) => {\n\n  const handleFocus = () => {\n    console.log('test');\n    params.setError({ text: '', status: 0 })\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-xs-12'>\n        <div className=\"component-container\">\n          <h1>Weather Finder</h1>\n          <p>Enter Zip Code to find out temp, condition and more</p>\n          <form onSubmit={params.getWeather}>\n            <input type=\"text\" name=\"zip\" placeholder=\"Zip Code...\" maxLength={5} onFocus={() => handleFocus()} />\n            <button>Get Weather</button>\n          </form>\n          {\n            params.error.status ? <p className=\"displayed-error\">{params.error.text}</p> : null\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Form\n","import React, { useEffect, useState } from 'react'\n\nconst Weather = (params: any) => {\n  const { dt, main, name, sys, weather, wind } = params.weatherData;\n  const [currentTime, setCurrentTime] = useState('');\n  const [currentTemps, setCurrentTemps] = useState({ temp: '', feelsLike: '', humidity: '' });\n  const [currentSunData, setCurrentSunData] = useState({ sunrise: '', sunset: '' });\n  const [currentWeather, setCurrentWeather] = useState({ description: '', icon: '' });\n  const [currentWind, setCurrentWind] = useState({ deg: '', speed: '' });\n  const [showMore, setShowMore] = useState(false);\n\n  const getCurrentTime = (passedTime: number) => {\n    if (!passedTime) return;\n    const time = new Date(passedTime * 1000).toLocaleString();\n\n    setCurrentTime(time);\n  }\n\n  const getTemps = (passedTemps: any) => {\n    if (!passedTemps.temp) return;\n    const temp = Math.round(passedTemps.temp).toString();\n    const feelsLike = Math.round(passedTemps.feels_like).toString();\n    const humidity = Math.round(passedTemps.humidity).toString();\n\n    setCurrentTemps({ temp, feelsLike, humidity });\n  }\n\n  const getSunData = (passedSunData: any) => {\n    if (!passedSunData.sunrise) return;\n    const sunrise = new Date(passedSunData.sunrise * 1000).toLocaleTimeString();\n    const sunset = new Date(passedSunData.sunset * 1000).toLocaleTimeString();\n\n    setCurrentSunData({ sunrise, sunset });\n  }\n\n  const getWeather = (passedWeather: any) => {\n    if (passedWeather.length === 0) return;\n    const description = passedWeather[0].description;\n    const icon = passedWeather[0].icon;\n    const mainWeather = passedWeather[0].main.toLowerCase();\n\n    const body = document.body;\n    body.className = '';\n    body.classList.add(mainWeather);\n    setCurrentWeather({ description, icon })\n  }\n\n  const getWind = (passedWind: any) => {\n    if (!passedWind.deg && !passedWind.speed) return;\n    const deg = passedWind.deg;\n    const speed = Math.round(passedWind.speed).toString();\n\n    setCurrentWind({ deg, speed });\n  }\n\n  const handleShowMore = () => {\n    setShowMore(!showMore);\n  }\n\n  useEffect(() => {\n    getCurrentTime(dt);\n    getTemps(main);\n    getSunData(sys);\n    getWeather(weather);\n    getWind(wind)\n  }, [dt, main, weather, sys, wind])\n\n  return (\n    <div className='row'>\n      <div className='col-xs-12'>\n        <div className=\"component-container\">\n          <div className=\"name-wrapper\">\n            <div className=\"weather-icon\">\n              {currentWeather.icon ?\n                <img alt=\"weather icon\" src={`http://openweathermap.org/img/wn/${currentWeather.icon}@2x.png`} /> :\n                <></>\n              }\n            </div>\n            <h1>{name} {currentTemps.temp}º</h1>\n          </div>\n          <div className=\"more-info\" data-active={showMore}>\n            <div><p>Feels Like: {currentTemps.feelsLike}º</p></div>\n            <div><p>Humidity: {currentTemps.humidity}%</p></div>\n            <div><p>Sunrise: {currentSunData.sunrise}</p></div>\n            <div><p>Sunset: {currentSunData.sunset}</p></div>\n            <div className=\"wind-wrapper\">\n              <span>{currentWind.speed}mph</span>\n              <div className=\"wind-direction\" style={{ transform: `rotate(${currentWind.deg}deg)` }}></div>\n            </div>\n            <div className=\"last-updated\"><p>Last Updated: {currentTime}</p></div>\n            <a className=\"start-over\" href=\"#!\" onClick={(e: any) => params.reset(e)}>Start Over</a>\n          </div>\n          <button className=\"show-more\" onClick={() => handleShowMore()}>{showMore ? 'Show Less' : 'Show More'}</button>\n          \n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Weather\n","import React, { useState } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport { WeatherData } from 'models/weather-data';\n\nconst API_KEY = \"fb308218343f86245f793d2f9145c2a9\";\n\nconst initWeatherData: WeatherData = {\n  dt: 0,\n  main: {\n    feels_like: 0,\n    humidity: 0,\n    pressure: 0,\n    temp: 0,\n    temp_max: 0,\n    temp_min: 0\n  },\n  name: '',\n  sys: {\n    country: '',\n    sunrise: 0,\n    sunset: 0\n  },\n  weather: [],\n  wind: {\n    deg: 0,\n    speed: 0\n  }\n}\n\nconst App = () => {\n  const [weatherData, setWeatherData] = useState<WeatherData>(initWeatherData);\n  const [error, setError] = useState({\n    text: '',\n    status: 0\n  });\n  \n  const getWeather = async (e: any) => {\n    e.preventDefault();\n    const zip = e.target.elements.zip.value;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?zip=${zip}&type=like&appid=${API_KEY}&units=imperial`);\n    const data = await api_call.json();\n    console.log('api call', api_call);\n\n    if (api_call.status === 400) {\n      setWeatherData(initWeatherData);\n      setError({text: 'Please Enter a Zip Code', status: 400});\n    } else if (api_call.status === 404) {\n      setWeatherData(initWeatherData);\n      setError({text: 'Zip Code not found', status: 404});\n    } else {\n      setWeatherData({\n        dt: data.dt,\n        main: data.main,\n        name: data.name,\n        sys: data.sys,\n        weather: data.weather,\n        wind: data.wind\n      })\n      setError({text: '', status: 200});\n    }\n  };\n\n  const reset = (e: any) => {\n    e.preventDefault();\n    setWeatherData(initWeatherData);\n    const body = document.body;\n    body.className = '';\n    body.classList.add('richmond');\n  };\n\n  return (\n    <div className=\"page-wrapper\">\n      <div className=\"container-fluid\">\n        <div className=\"wrap\">\n          {weatherData.weather.length ?\n            <Weather weatherData={weatherData} error={error} reset={(e: MouseEvent) => reset(e)} /> :\n            <Form getWeather={(e: MouseEvent) => getWeather(e)} error={error} setError={setError} />\n          }\n        </div>\n      </div>\n      <div className=\"preloader richmond\" style={{ width: '1px', height: '1px' }}></div>\n      <div className=\"preloader clear\" style={{ width: '1px', height: '1px' }}></div>\n      <div className=\"preloader thunderstorm\" style={{ width: '1px', height: '1px' }}></div>\n      <div className=\"preloader drizzle\" style={{ width: '1px', height: '1px' }}></div>\n      <div className=\"preloader rain\" style={{ width: '1px', height: '1px' }}></div>\n      <div className=\"preloader snow\" style={{ width: '1px', height: '1px' }}></div>\n      <div className=\"preloader clouds\" style={{ width: '1px', height: '1px' }}></div>\n    </div>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './styles/css/index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}